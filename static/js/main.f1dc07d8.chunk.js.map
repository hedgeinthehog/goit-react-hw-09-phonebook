{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/alert/alert-reducer.js","redux/store.js","router/routes.js","redux/auth/auth-selectors.js","router/PrivateRoute.jsx","router/PublicRoute.jsx","router/Router.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","redux/alert/alert-selectors.js","components/Notification/Notification.jsx","components/App/App.jsx","index.js","redux/contacts/contacts-actions.js","redux/alert/alert-actions.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","redux/alert/alert-operations.js","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-actions.js"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","find","contact","name","alert","deleteContactSuccess","filter","id","updateFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","combineReducers","initialUserState","email","user","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","setError","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","message","setAlert","hideAlert","__","isOpen","type","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","alertReducer","devTools","process","persistor","persistStore","paths","exportedSelectors","getIsAuthenticated","getUserEmail","getErrorMessage","isLoading","connect","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","HomeView","lazy","RegistrationView","LoginView","ContactsView","Router","fallback","LinearProgress","path","exact","Navigation","useSelector","className","styles","navItem","activeClassName","active","Button","button","UserMenu","isLoggingOut","dispatch","useDispatch","onLogout","useCallback","authOperations","logout","wrapper","Hidden","xsDown","onClick","disabled","AuthNav","AppBar","appbar","Toolbar","toolbar","isAlertOpen","alertMessage","alertType","Alert","elevation","variant","Notification","isNotificationVisible","alertSelectors","severity","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","App","useEffect","getCurrentUser","Container","ReactDOM","StrictMode","StylesProvider","injectFirst","document","getElementById","createAction","module","exports","axios","defaults","baseURL","headers","common","Authorization","exportedOperations","register","credentials","a","post","response","data","status","login","setErrorAlert","getState","persistedToken","get","code"],"mappings":"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","file":"static/js/main.f1dc07d8.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilter,\r\n} from './contacts-actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    const contactExists = state.find(contact => contact.name === payload.name);\r\n\r\n    if (contactExists) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [registerRequest]: () => true,\r\n  [registerSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginRequest]: () => true,\r\n  [loginSuccess]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutRequest]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  loading,\r\n  error,\r\n});\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { setAlert, hideAlert } from './alert-actions';\r\n\r\nconst message = createReducer(null, {\r\n  [setAlert]: (_, { payload }) => payload.message,\r\n  [hideAlert]: (_, __) => null,\r\n});\r\n\r\nconst isOpen = createReducer(false, {\r\n  [setAlert]: (_, __) => true,\r\n  [hideAlert]: (_, __) => false,\r\n});\r\n\r\nconst type = createReducer(null, {\r\n  [setAlert]: (_, { payload }) => payload.type,\r\n});\r\n\r\nexport default combineReducers({\r\n  message,\r\n  isOpen,\r\n  type,\r\n});\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\nimport alertReducer from './alert/alert-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n    alert: alertReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","export const paths = {\r\n  home: '/',\r\n  registration: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst getErrorMessage = state => state.auth.error;\r\n\r\nconst isLoading = state => state.auth.loading;\r\n\r\nconst exportedSelectors = {\r\n  getIsAuthenticated,\r\n  getUserEmail,\r\n  getErrorMessage,\r\n  isLoading,\r\n};\r\nexport default exportedSelectors;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { lazy, Suspense } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { paths } from './routes';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst HomeView = lazy(() => import('../views/HomeView'));\r\nconst RegistrationView = lazy(() => import('../views/RegistrationView'));\r\nconst LoginView = lazy(() => import('../views/LoginView'));\r\nconst ContactsView = lazy(() => import('../views/ContactsView'));\r\n\r\nconst Router = () => (\r\n  <Suspense fallback={<LinearProgress />}>\r\n    <Switch>\r\n      <Route path={paths.home} component={HomeView} exact />\r\n      <PublicRoute\r\n        path={paths.registration}\r\n        restricted\r\n        redirectTo={paths.contacts}\r\n        component={RegistrationView}\r\n      />\r\n      <PublicRoute\r\n        path={paths.login}\r\n        restricted\r\n        redirectTo={paths.contacts}\r\n        component={LoginView}\r\n      />\r\n      <PrivateRoute\r\n        path={paths.contacts}\r\n        redirectTo={paths.login}\r\n        component={ContactsView}\r\n      />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nexport default Router;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { paths } from '../../router/routes';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './Navigation.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Navigation = () => {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={paths.home}\r\n        exact\r\n        className={styles.navItem}\r\n        activeClassName={styles.active}\r\n      >\r\n        <Button className={styles.button}>Home</Button>\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to={paths.contacts}\r\n          className={styles.navItem}\r\n          activeClassName={styles.active}\r\n        >\r\n          <Button className={styles.button}>Contacts</Button>\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './UserMenu.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst UserMenu = () => {\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n  const isLoggingOut = useSelector(authSelectors.isLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logout());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Hidden xsDown>\r\n        <span>Welcome, {email}</span>\r\n      </Hidden>\r\n      <Button\r\n        onClick={onLogout}\r\n        disabled={isLoggingOut}\r\n        className={styles.button}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { paths } from '../../router/routes';\r\nimport styles from './AuthNav.module.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={paths.login}\r\n        className={styles.navItem}\r\n        activeClassName={styles.active}\r\n      >\r\n        <Button className={styles.button}>Login</Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to={paths.registration}\r\n        className={styles.navItem}\r\n        activeClassName={styles.active}\r\n      >\r\n        <Button className={styles.button}>Register</Button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './AppBar.module.css';\r\nimport StyledAppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst AppBar = () => {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header>\r\n      <StyledAppBar className={styles.appbar}>\r\n        <Toolbar className={styles.toolbar}>\r\n          <Navigation />\r\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n        </Toolbar>\r\n      </StyledAppBar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","const isAlertOpen = state => state.alert.isOpen;\r\n\r\nconst alertMessage = state => state.alert.message;\r\n\r\nconst alertType = state => state.alert.type;\r\n\r\nconst exportedSelectors = { isAlertOpen, alertMessage, alertType };\r\nexport default exportedSelectors;\r\n","import { React } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport alertSelectors from '../../redux/alert/alert-selectors';\r\nimport { hideAlert } from '../../redux/alert/alert-actions';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Notification = () => {\r\n  const isNotificationVisible = useSelector(alertSelectors.isAlertOpen);\r\n  const message = useSelector(alertSelectors.alertMessage);\r\n  const severity = useSelector(alertSelectors.alertType);\r\n  const dispatch = useDispatch();\r\n\r\n  const onCloseAlert = () => dispatch(hideAlert());\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    onCloseAlert();\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={isNotificationVisible}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport Router from '../../router/Router';\r\nimport AppBar from '../AppBar';\r\nimport Notification from '../Notification';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Notification />\r\n      <Router />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles/common.css';\r\nimport { StylesProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        {/* <ThemeProvider theme={theme}> */}\r\n        <StylesProvider injectFirst>\r\n          <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n          {/* </ThemeProvider> */}\r\n        </StylesProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContacstSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const updateFilter = createAction('contacts/update_filter');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const setAlert = createAction('alert/setAlert');\r\nexport const hideAlert = createAction('alert/hideAlert');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"Navigation_navItem__2Tecw\",\"button\":\"Navigation_button__3WGua\",\"active\":\"Navigation_active__yzBNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"AuthNav_navItem__3eK5N\",\"button\":\"AuthNav_button__jcMcB\",\"active\":\"AuthNav_active__3yiH_\"};","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\nimport { setAlert } from '../alert/alert-actions';\r\nimport { setErrorAlert } from '../alert/alert-operations';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n\r\n    if (response.status === 201) {\r\n      dispatch(setAlert({ message: 'Welcome to PhoneBook!', type: 'success' }));\r\n    }\r\n\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    if (error.response.status === 400) {\r\n      dispatch(\r\n        setAlert({\r\n          message:\r\n            'Registration unsuccessfull. A user with such email address might exist already',\r\n          type: 'error',\r\n        }),\r\n      );\r\n    }\r\n\r\n    dispatch(\r\n      registerError({\r\n        message: error.message,\r\n        error: error.response.status,\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    if (error.response.status === 400) {\r\n      dispatch(\r\n        setAlert({\r\n          message: 'Login or password is incorrect',\r\n          type: 'error',\r\n        }),\r\n      );\r\n    }\r\n\r\n    dispatch(\r\n      loginError({\r\n        message: error.message,\r\n        error: error.response.status,\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(setErrorAlert(error));\r\n    dispatch(\r\n      logoutError({\r\n        message: error.message,\r\n        error: error.response.status,\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(setErrorAlert(error));\r\n    dispatch(\r\n      getCurrentUserError({\r\n        message: error.message,\r\n        error: error.response.status,\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nconst exportedOperations = { register, login, logout, getCurrentUser };\r\n\r\nexport default exportedOperations;\r\n","import { setAlert } from './alert-actions';\r\n\r\nconst setErrorAlert = error => dispatch => {\r\n  const code = error.response.status;\r\n\r\n  if (code === 500)\r\n    dispatch(\r\n      setAlert({\r\n        message: 'Server error occured. Please try again',\r\n        type: 'error',\r\n      }),\r\n    );\r\n  if (code === 401)\r\n    dispatch(\r\n      setAlert({ message: 'Operation is not authorized', type: 'error' }),\r\n    );\r\n};\r\n\r\nexport { setErrorAlert };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UserMenu_button__xQc0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"AppBar_appbar__3n9Zj\",\"toolbar\":\"AppBar_toolbar__34LIa\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n"],"sourceRoot":""}